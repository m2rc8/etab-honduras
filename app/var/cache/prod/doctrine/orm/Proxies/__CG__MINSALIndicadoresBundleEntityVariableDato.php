<?php

namespace Proxies\__CG__\MINSAL\IndicadoresBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class VariableDato extends \MINSAL\IndicadoresBundle\Entity\VariableDato implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\VariableDato' . "\0" . 'id', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\VariableDato' . "\0" . 'nombre', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\VariableDato' . "\0" . 'confiabilidad', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\VariableDato' . "\0" . 'iniciales', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\VariableDato' . "\0" . 'comentario', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\VariableDato' . "\0" . 'esPoblacion', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\VariableDato' . "\0" . 'idFuenteDato', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\VariableDato' . "\0" . 'idResponsableDato', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\VariableDato' . "\0" . 'origenDatos', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\VariableDato' . "\0" . 'indicadores'];
        }

        return ['__isInitialized__', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\VariableDato' . "\0" . 'id', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\VariableDato' . "\0" . 'nombre', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\VariableDato' . "\0" . 'confiabilidad', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\VariableDato' . "\0" . 'iniciales', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\VariableDato' . "\0" . 'comentario', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\VariableDato' . "\0" . 'esPoblacion', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\VariableDato' . "\0" . 'idFuenteDato', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\VariableDato' . "\0" . 'idResponsableDato', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\VariableDato' . "\0" . 'origenDatos', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\VariableDato' . "\0" . 'indicadores'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (VariableDato $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setNombre($nombre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNombre', [$nombre]);

        return parent::setNombre($nombre);
    }

    /**
     * {@inheritDoc}
     */
    public function getNombre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNombre', []);

        return parent::getNombre();
    }

    /**
     * {@inheritDoc}
     */
    public function setConfiabilidad($confiabilidad)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConfiabilidad', [$confiabilidad]);

        return parent::setConfiabilidad($confiabilidad);
    }

    /**
     * {@inheritDoc}
     */
    public function getConfiabilidad()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConfiabilidad', []);

        return parent::getConfiabilidad();
    }

    /**
     * {@inheritDoc}
     */
    public function setIniciales($iniciales)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIniciales', [$iniciales]);

        return parent::setIniciales($iniciales);
    }

    /**
     * {@inheritDoc}
     */
    public function getIniciales()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIniciales', []);

        return parent::getIniciales();
    }

    /**
     * {@inheritDoc}
     */
    public function setComentario($comentario)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setComentario', [$comentario]);

        return parent::setComentario($comentario);
    }

    /**
     * {@inheritDoc}
     */
    public function getComentario()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComentario', []);

        return parent::getComentario();
    }

    /**
     * {@inheritDoc}
     */
    public function setEsPoblacion($esPoblacion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEsPoblacion', [$esPoblacion]);

        return parent::setEsPoblacion($esPoblacion);
    }

    /**
     * {@inheritDoc}
     */
    public function getEsPoblacion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEsPoblacion', []);

        return parent::getEsPoblacion();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdFuenteDato(\MINSAL\IndicadoresBundle\Entity\FuenteDato $idFuenteDato = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdFuenteDato', [$idFuenteDato]);

        return parent::setIdFuenteDato($idFuenteDato);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdFuenteDato()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdFuenteDato', []);

        return parent::getIdFuenteDato();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdResponsableDato(\MINSAL\IndicadoresBundle\Entity\ResponsableDato $idResponsableDato = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdResponsableDato', [$idResponsableDato]);

        return parent::setIdResponsableDato($idResponsableDato);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdResponsableDato()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdResponsableDato', []);

        return parent::getIdResponsableDato();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrigenDatos(\MINSAL\IndicadoresBundle\Entity\OrigenDatos $origenDatos = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrigenDatos', [$origenDatos]);

        return parent::setOrigenDatos($origenDatos);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrigenDatos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrigenDatos', []);

        return parent::getOrigenDatos();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function addIndicador(\MINSAL\IndicadoresBundle\Entity\FichaTecnica $indicadores)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addIndicador', [$indicadores]);

        return parent::addIndicador($indicadores);
    }

    /**
     * {@inheritDoc}
     */
    public function removeIndicador(\MINSAL\IndicadoresBundle\Entity\FichaTecnica $indicadores)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeIndicador', [$indicadores]);

        return parent::removeIndicador($indicadores);
    }

    /**
     * {@inheritDoc}
     */
    public function getIndicadores()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIndicadores', []);

        return parent::getIndicadores();
    }

    /**
     * {@inheritDoc}
     */
    public function addIndicadore(\MINSAL\IndicadoresBundle\Entity\FichaTecnica $indicadores)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addIndicadore', [$indicadores]);

        return parent::addIndicadore($indicadores);
    }

    /**
     * {@inheritDoc}
     */
    public function removeIndicadore(\MINSAL\IndicadoresBundle\Entity\FichaTecnica $indicadores)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeIndicadore', [$indicadores]);

        return parent::removeIndicadore($indicadores);
    }

}
