<?php

namespace Proxies\__CG__\MINSAL\IndicadoresBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class FichaTecnica extends \MINSAL\IndicadoresBundle\Entity\FichaTecnica implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'id', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'nombre', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'tema', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'concepto', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'unidadMedida', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'meta', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'formula', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'observacion', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'camposIndicador', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'confiabilidad', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'updatedAt', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'esAcumulado', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'esPublico', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'ultimaLectura', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'clasificacionPrivacidad', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'clasificacionTecnica', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'periodo', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'alertas', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'variables', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'usuarios', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'gruposUsuarios', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'usuariosFavoritos', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'campos', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'grupos', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'clasificacionUso'];
        }

        return ['__isInitialized__', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'id', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'nombre', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'tema', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'concepto', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'unidadMedida', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'meta', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'formula', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'observacion', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'camposIndicador', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'confiabilidad', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'updatedAt', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'esAcumulado', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'esPublico', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'ultimaLectura', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'clasificacionPrivacidad', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'clasificacionTecnica', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'periodo', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'alertas', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'variables', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'usuarios', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'gruposUsuarios', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'usuariosFavoritos', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'campos', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'grupos', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\FichaTecnica' . "\0" . 'clasificacionUso'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (FichaTecnica $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setNombre($nombre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNombre', [$nombre]);

        return parent::setNombre($nombre);
    }

    /**
     * {@inheritDoc}
     */
    public function getNombre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNombre', []);

        return parent::getNombre();
    }

    /**
     * {@inheritDoc}
     */
    public function setTema($tema)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTema', [$tema]);

        return parent::setTema($tema);
    }

    /**
     * {@inheritDoc}
     */
    public function getTema()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTema', []);

        return parent::getTema();
    }

    /**
     * {@inheritDoc}
     */
    public function setConcepto($concepto)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConcepto', [$concepto]);

        return parent::setConcepto($concepto);
    }

    /**
     * {@inheritDoc}
     */
    public function getConcepto()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConcepto', []);

        return parent::getConcepto();
    }

    /**
     * {@inheritDoc}
     */
    public function setUnidadMedida($unidadMedida)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUnidadMedida', [$unidadMedida]);

        return parent::setUnidadMedida($unidadMedida);
    }

    /**
     * {@inheritDoc}
     */
    public function getUnidadMedida()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUnidadMedida', []);

        return parent::getUnidadMedida();
    }

    /**
     * {@inheritDoc}
     */
    public function setMeta($meta)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMeta', [$meta]);

        return parent::setMeta($meta);
    }

    /**
     * {@inheritDoc}
     */
    public function getMeta()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMeta', []);

        return parent::getMeta();
    }

    /**
     * {@inheritDoc}
     */
    public function setFormula($formula)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFormula', [$formula]);

        return parent::setFormula($formula);
    }

    /**
     * {@inheritDoc}
     */
    public function getFormula()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFormula', []);

        return parent::getFormula();
    }

    /**
     * {@inheritDoc}
     */
    public function setObservacion($observacion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setObservacion', [$observacion]);

        return parent::setObservacion($observacion);
    }

    /**
     * {@inheritDoc}
     */
    public function getObservacion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getObservacion', []);

        return parent::getObservacion();
    }

    /**
     * {@inheritDoc}
     */
    public function setConfiabilidad($confiabilidad)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConfiabilidad', [$confiabilidad]);

        return parent::setConfiabilidad($confiabilidad);
    }

    /**
     * {@inheritDoc}
     */
    public function getConfiabilidad()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConfiabilidad', []);

        return parent::getConfiabilidad();
    }

    /**
     * {@inheritDoc}
     */
    public function addCampo(\MINSAL\IndicadoresBundle\Entity\Campo $campos)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCampo', [$campos]);

        return parent::addCampo($campos);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCampo(\MINSAL\IndicadoresBundle\Entity\Campo $campos)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCampo', [$campos]);

        return parent::removeCampo($campos);
    }

    /**
     * {@inheritDoc}
     */
    public function getCampos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCampos', []);

        return parent::getCampos();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function setCamposIndicador($camposIndicador)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCamposIndicador', [$camposIndicador]);

        return parent::setCamposIndicador($camposIndicador);
    }

    /**
     * {@inheritDoc}
     */
    public function getCamposIndicador()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCamposIndicador', []);

        return parent::getCamposIndicador();
    }

    /**
     * {@inheritDoc}
     */
    public function addAlertas(\MINSAL\IndicadoresBundle\Entity\IndicadorAlertas $alertas)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAlertas', [$alertas]);

        return parent::addAlertas($alertas);
    }

    /**
     * {@inheritDoc}
     */
    public function getAlertas()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAlertas', []);

        return parent::getAlertas();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function addAlerta(\MINSAL\IndicadoresBundle\Entity\IndicadorAlertas $alertas)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAlerta', [$alertas]);

        return parent::addAlerta($alertas);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAlerta(\MINSAL\IndicadoresBundle\Entity\IndicadorAlertas $alertas)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAlerta', [$alertas]);

        return parent::removeAlerta($alertas);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAlertas()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAlertas', []);

        return parent::removeAlertas();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function addVariable(\MINSAL\IndicadoresBundle\Entity\VariableDato $variables)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addVariable', [$variables]);

        return parent::addVariable($variables);
    }

    /**
     * {@inheritDoc}
     */
    public function removeVariable(\MINSAL\IndicadoresBundle\Entity\VariableDato $variables)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeVariable', [$variables]);

        return parent::removeVariable($variables);
    }

    /**
     * {@inheritDoc}
     */
    public function getVariables()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVariables', []);

        return parent::getVariables();
    }

    /**
     * {@inheritDoc}
     */
    public function setUltimaLectura($ultimaLectura)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUltimaLectura', [$ultimaLectura]);

        return parent::setUltimaLectura($ultimaLectura);
    }

    /**
     * {@inheritDoc}
     */
    public function getUltimaLectura()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUltimaLectura', []);

        return parent::getUltimaLectura();
    }

    /**
     * {@inheritDoc}
     */
    public function setPeriodo(\MINSAL\IndicadoresBundle\Entity\Periodos $periodo = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPeriodo', [$periodo]);

        return parent::setPeriodo($periodo);
    }

    /**
     * {@inheritDoc}
     */
    public function getPeriodo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPeriodo', []);

        return parent::getPeriodo();
    }

    /**
     * {@inheritDoc}
     */
    public function setClasificacionUso(\MINSAL\IndicadoresBundle\Entity\ClasificacionUso $clasificacionUso = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClasificacionUso', [$clasificacionUso]);

        return parent::setClasificacionUso($clasificacionUso);
    }

    /**
     * {@inheritDoc}
     */
    public function getClasificacionUso()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClasificacionUso', []);

        return parent::getClasificacionUso();
    }

    /**
     * {@inheritDoc}
     */
    public function addUsuariosFavorito(\MINSAL\IndicadoresBundle\Entity\User $usuariosFavoritos)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUsuariosFavorito', [$usuariosFavoritos]);

        return parent::addUsuariosFavorito($usuariosFavoritos);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUsuariosFavorito(\MINSAL\IndicadoresBundle\Entity\User $usuariosFavoritos)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUsuariosFavorito', [$usuariosFavoritos]);

        return parent::removeUsuariosFavorito($usuariosFavoritos);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsuariosFavoritos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsuariosFavoritos', []);

        return parent::getUsuariosFavoritos();
    }

    /**
     * {@inheritDoc}
     */
    public function setEsAcumulado($esAcumulado)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEsAcumulado', [$esAcumulado]);

        return parent::setEsAcumulado($esAcumulado);
    }

    /**
     * {@inheritDoc}
     */
    public function getEsAcumulado()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEsAcumulado', []);

        return parent::getEsAcumulado();
    }

    /**
     * {@inheritDoc}
     */
    public function setEsPublico($esPublico)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEsPublico', [$esPublico]);

        return parent::setEsPublico($esPublico);
    }

    /**
     * {@inheritDoc}
     */
    public function getEsPublico()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEsPublico', []);

        return parent::getEsPublico();
    }

    /**
     * {@inheritDoc}
     */
    public function addGrupo(\MINSAL\IndicadoresBundle\Entity\GrupoIndicadoresIndicador $grupos)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addGrupo', [$grupos]);

        return parent::addGrupo($grupos);
    }

    /**
     * {@inheritDoc}
     */
    public function removeGrupo(\MINSAL\IndicadoresBundle\Entity\GrupoIndicadoresIndicador $grupos)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeGrupo', [$grupos]);

        return parent::removeGrupo($grupos);
    }

    /**
     * {@inheritDoc}
     */
    public function getGrupos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGrupos', []);

        return parent::getGrupos();
    }

    /**
     * {@inheritDoc}
     */
    public function addClasificacionTecnica(\MINSAL\IndicadoresBundle\Entity\ClasificacionTecnica $clasificacionTecnica)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addClasificacionTecnica', [$clasificacionTecnica]);

        return parent::addClasificacionTecnica($clasificacionTecnica);
    }

    /**
     * {@inheritDoc}
     */
    public function removeClasificacionTecnica(\MINSAL\IndicadoresBundle\Entity\ClasificacionTecnica $clasificacionTecnica)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeClasificacionTecnica', [$clasificacionTecnica]);

        return parent::removeClasificacionTecnica($clasificacionTecnica);
    }

    /**
     * {@inheritDoc}
     */
    public function getClasificacionTecnica()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClasificacionTecnica', []);

        return parent::getClasificacionTecnica();
    }

    /**
     * {@inheritDoc}
     */
    public function setClasificacionTecnica(\Doctrine\Common\Collections\Collection $clasificacionTecnica)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClasificacionTecnica', [$clasificacionTecnica]);

        return parent::setClasificacionTecnica($clasificacionTecnica);
    }

    /**
     * {@inheritDoc}
     */
    public function addClasificacionPrivacidad(\MINSAL\IndicadoresBundle\Entity\ClasificacionPrivacidad $clasificacionPrivacidad)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addClasificacionPrivacidad', [$clasificacionPrivacidad]);

        return parent::addClasificacionPrivacidad($clasificacionPrivacidad);
    }

    /**
     * {@inheritDoc}
     */
    public function removeClasificacionPrivacidad(\MINSAL\IndicadoresBundle\Entity\ClasificacionPrivacidad $clasificacionPrivacidad)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeClasificacionPrivacidad', [$clasificacionPrivacidad]);

        return parent::removeClasificacionPrivacidad($clasificacionPrivacidad);
    }

    /**
     * {@inheritDoc}
     */
    public function getClasificacionPrivacidad()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClasificacionPrivacidad', []);

        return parent::getClasificacionPrivacidad();
    }

    /**
     * {@inheritDoc}
     */
    public function addUsuario(\MINSAL\IndicadoresBundle\Entity\User $usuarios)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUsuario', [$usuarios]);

        return parent::addUsuario($usuarios);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUsuario(\MINSAL\IndicadoresBundle\Entity\User $usuarios)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUsuario', [$usuarios]);

        return parent::removeUsuario($usuarios);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsuarios()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsuarios', []);

        return parent::getUsuarios();
    }

    /**
     * {@inheritDoc}
     */
    public function addGruposUsuario(\Application\Sonata\UserBundle\Entity\Group $gruposUsuarios)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addGruposUsuario', [$gruposUsuarios]);

        return parent::addGruposUsuario($gruposUsuarios);
    }

    /**
     * {@inheritDoc}
     */
    public function removeGruposUsuario(\Application\Sonata\UserBundle\Entity\Group $gruposUsuarios)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeGruposUsuario', [$gruposUsuarios]);

        return parent::removeGruposUsuario($gruposUsuarios);
    }

    /**
     * {@inheritDoc}
     */
    public function getGruposUsuarios()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGruposUsuarios', []);

        return parent::getGruposUsuarios();
    }

}
