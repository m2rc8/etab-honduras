<?php

namespace Proxies\__CG__\MINSAL\IndicadoresBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Conexion extends \MINSAL\IndicadoresBundle\Entity\Conexion implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\Conexion' . "\0" . 'id', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\Conexion' . "\0" . 'nombreConexion', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\Conexion' . "\0" . 'comentario', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\Conexion' . "\0" . 'ip', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\Conexion' . "\0" . 'usuario', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\Conexion' . "\0" . 'clave', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\Conexion' . "\0" . 'nombreBaseDatos', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\Conexion' . "\0" . 'puerto', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\Conexion' . "\0" . 'instancia', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\Conexion' . "\0" . 'origenes', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\Conexion' . "\0" . 'idMotor'];
        }

        return ['__isInitialized__', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\Conexion' . "\0" . 'id', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\Conexion' . "\0" . 'nombreConexion', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\Conexion' . "\0" . 'comentario', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\Conexion' . "\0" . 'ip', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\Conexion' . "\0" . 'usuario', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\Conexion' . "\0" . 'clave', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\Conexion' . "\0" . 'nombreBaseDatos', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\Conexion' . "\0" . 'puerto', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\Conexion' . "\0" . 'instancia', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\Conexion' . "\0" . 'origenes', '' . "\0" . 'MINSAL\\IndicadoresBundle\\Entity\\Conexion' . "\0" . 'idMotor'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Conexion $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setNombreConexion($nombreConexion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNombreConexion', [$nombreConexion]);

        return parent::setNombreConexion($nombreConexion);
    }

    /**
     * {@inheritDoc}
     */
    public function getNombreConexion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNombreConexion', []);

        return parent::getNombreConexion();
    }

    /**
     * {@inheritDoc}
     */
    public function setComentario($comentario)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setComentario', [$comentario]);

        return parent::setComentario($comentario);
    }

    /**
     * {@inheritDoc}
     */
    public function getComentario()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComentario', []);

        return parent::getComentario();
    }

    /**
     * {@inheritDoc}
     */
    public function setIp($ip)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIp', [$ip]);

        return parent::setIp($ip);
    }

    /**
     * {@inheritDoc}
     */
    public function getIp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIp', []);

        return parent::getIp();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsuario($usuario)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsuario', [$usuario]);

        return parent::setUsuario($usuario);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsuario()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsuario', []);

        return parent::getUsuario();
    }

    /**
     * {@inheritDoc}
     */
    public function setClave($clave)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClave', [$clave]);

        return parent::setClave($clave);
    }

    /**
     * {@inheritDoc}
     */
    public function getClave()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClave', []);

        return parent::getClave();
    }

    /**
     * {@inheritDoc}
     */
    public function setNombreBaseDatos($nombreBaseDatos)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNombreBaseDatos', [$nombreBaseDatos]);

        return parent::setNombreBaseDatos($nombreBaseDatos);
    }

    /**
     * {@inheritDoc}
     */
    public function getNombreBaseDatos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNombreBaseDatos', []);

        return parent::getNombreBaseDatos();
    }

    /**
     * {@inheritDoc}
     */
    public function setPuerto($puerto)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPuerto', [$puerto]);

        return parent::setPuerto($puerto);
    }

    /**
     * {@inheritDoc}
     */
    public function getPuerto()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPuerto', []);

        return parent::getPuerto();
    }

    /**
     * {@inheritDoc}
     */
    public function setInstancia($instancia)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInstancia', [$instancia]);

        return parent::setInstancia($instancia);
    }

    /**
     * {@inheritDoc}
     */
    public function getInstancia()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInstancia', []);

        return parent::getInstancia();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdMotor(\MINSAL\IndicadoresBundle\Entity\MotorBd $idMotor = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdMotor', [$idMotor]);

        return parent::setIdMotor($idMotor);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdMotor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdMotor', []);

        return parent::getIdMotor();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function addOrigene(\MINSAL\IndicadoresBundle\Entity\OrigenDatos $origenes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOrigene', [$origenes]);

        return parent::addOrigene($origenes);
    }

    /**
     * {@inheritDoc}
     */
    public function removeOrigene(\MINSAL\IndicadoresBundle\Entity\OrigenDatos $origenes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeOrigene', [$origenes]);

        return parent::removeOrigene($origenes);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrigenes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrigenes', []);

        return parent::getOrigenes();
    }

}
